syntax = "proto3";

package haproxy.v1;

option go_package = "github.com/bear-san/haproxy-network-manager/pkg/haproxy/v1";

// BackendBalance represents load balancing configuration for backend
message BackendBalance {
  string algorithm = 1; // first, hash, random, roundrobin
}

// Backend represents a HAProxy backend configuration
message Backend {
  optional int32 id = 1;
  optional BackendBalance balance = 2;
  optional string name = 3;
  string mode = 4; // tcp, http
}

// CRUD request/response messages for Backend

message CreateBackendRequest {
  string transaction_id = 1;
  Backend backend = 2;
}

message CreateBackendResponse {
  Backend backend = 1;
}

message GetBackendRequest {
  string transaction_id = 1;
  string name = 2;
}

message GetBackendResponse {
  Backend backend = 1;
}

message ListBackendsRequest {
  string transaction_id = 1;
}

message ListBackendsResponse {
  repeated Backend backends = 1;
}

message UpdateBackendRequest {
  string transaction_id = 1;
  string name = 2;
  Backend backend = 3;
}

message UpdateBackendResponse {
  Backend backend = 1;
}

message DeleteBackendRequest {
  string transaction_id = 1;
  string name = 2;
}

message DeleteBackendResponse {}

// BackendService provides CRUD operations for HAProxy backend configuration
service BackendService {
  rpc CreateBackend(CreateBackendRequest) returns (CreateBackendResponse);
  rpc GetBackend(GetBackendRequest) returns (GetBackendResponse);
  rpc ListBackends(ListBackendsRequest) returns (ListBackendsResponse);
  rpc UpdateBackend(UpdateBackendRequest) returns (UpdateBackendResponse);
  rpc DeleteBackend(DeleteBackendRequest) returns (DeleteBackendResponse);
}